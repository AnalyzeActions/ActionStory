[tool.poetry]
name = "ActionStory"
version = "0.1.0"
description = "Surface the Story of GitHub Actions Builds"
authors = ["Gregory M. Kapfhammer <gkapfham@allegheny.edu>"]
readme = "README.md"

[tool.poetry.scripts]
actionstory = "actionstory.main:cli"

[tool.poetry.dependencies]
python = "^3.9"
typer = {extras = ["all"], version = "^0.3.2"}
rich = "^10.5.0"
requests = "^2.25.1"
python-dotenv = "^0.18.0"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
pylint = "^2.6.0"
black = "^20.8b1"
pydocstyle = "^5.1.1"
flake8 = "^3.8.4"
taskipy = "^1.8.1"
pytest-cov = "^2.11.1"

[tool.taskipy.tasks]
black = { cmd = "black actionstory tests --check", help = "Run the black checks for source code format" }
coverage = { cmd = "pytest -s --cov-config .coveragerc --cov-report term-missing --cov-report xml --cov --cov-branch", help = "Run coverage monitoring for the test suite" }
flake8 = { cmd = "flake8 actionstory tests", help = "Run the flake8 checks for source code documentation" }
pydocstyle = { cmd = "pydocstyle actionstory tests", help = "Run the pydocstyle checks for source code documentation" }
pylint = { cmd = "pylint actionstory tests", help = "Run the pylint checks for source code documentation" }
test = { cmd = "pytest -x -s", help = "Run the pytest test suite (takes a long time)" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
